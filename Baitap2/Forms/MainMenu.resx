<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>